{"version":3,"sources":["static/static_pic.jpg","App.jsx","reduxStore/user/index.js","reduxStore/globalState/index.js","reduxStore/product/index.js","reduxStore/cart/index.js","reduxStore/index.js","components/WithAuth/WithAuth.jsx","components/UserProfileDropdown/UserProfileDropdown.jsx","components/Header/Header.jsx","pages/HomePage/HomePage.jsx","components/CartWindow/CartWindow.jsx","pages/CartPage/CartPage.jsx","hooks/useInput.jsx","components/LoginWindow/LoginWindow.jsx","pages/LoginPage/LoginPage.jsx","components/ManageProduct/ManageProduct.jsx","components/Card/Card.jsx","components/DisplayProducts/DisplayProducts.jsx","pages/ProductPage/ProductPage.jsx","index.jsx"],"names":["module","exports","App","children","className","user","createSlice","name","initialState","currentUser","reducers","setCurrentUser","state","action","payload","logOut","actions","reducer","global","isUserProfileOpened","toggleUserProfile","extraReducers","builder","addCase","products","id","uuid","price","images","continent","addProduct","push","addThisProductToCart","createAction","cart","cartItems","cartItem","find","quantity","cartItemsSelector","totalSelector","createSelector","reduce","total","item","globalReducer","productReducer","userReducer","store","configureStore","mapStateToProps","WithAuth","Component","connect","restProps","to","dispatch","bindActionCreators","useEffect","listener","e","target","matches","document","body","addEventListener","removeEventListener","onClick","HomePage","map","key","Math","random","CartPage","style","textAlign","fields","prev","curr","useState","setState","changeHandler","value","clearState","firstInputRef","useRef","useInput","account","password","current","focus","onSubmit","preventDefault","htmlFor","ref","type","onChange","LoginPage","productNameInputRef","Card","otherProps","src","STATIC_PICTURE","alt","marginTop","product","toString","slice","ProductPage","Root","basename","process","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a0f676e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/static_pic.37a228bc.jpg\";","import React from \"react\"\n\nconst App = ({ children }) => {\n  return <div className=\"App\">{children}</div>\n}\n\nexport default App\n","import { createSlice } from \"@reduxjs/toolkit\"\n\n/*\n  type User = {\n    currentUser: string\n  }\n*/\n\nconst user = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: \"\",\n  },\n  reducers: {\n    setCurrentUser: (state, action) => {\n      state.currentUser = action.payload\n    },\n    logOut: (state) => {\n      state.currentUser = \"\"\n    },\n  },\n})\n\nexport const { setCurrentUser, logOut } = user.actions\nexport const { reducer } = user\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport { logOut } from \"reduxStore/user\"\n\nconst global = createSlice({\n  name: \"global\",\n  initialState: {\n    isUserProfileOpened: false,\n  },\n  reducers: {\n    toggleUserProfile: (state) => {\n      state.isUserProfileOpened = !state.isUserProfileOpened\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logOut, (state) => {\n      state.isUserProfileOpened = !state.isUserProfileOpened\n    })\n  },\n})\n\nexport const { toggleUserProfile } = global.actions\nexport const { reducer } = global\n","import { createSlice, createAction } from \"@reduxjs/toolkit\"\nimport { v4 as uuid } from \"uuid\"\n\n/*\n  type Continent: \"Africa\" | \"Europe\" | \"Asia\" | \"North America\" | \"South America\" | \"Australia\"\n\n  type Product = {\n    name: string\n    price: number\n    images: string[]\n    continent: Continent\n  }\n*/\n\nconst products = createSlice({\n  name: \"product\",\n  initialState: [\n    {\n      id: uuid(),\n      name: \"USA\",\n      price: 200,\n      images: [],\n      continent: \"North America\",\n    },\n    {\n      id: uuid(),\n      name: \"CHINA\",\n      price: 300,\n      images: [],\n      continent: \"Asia\",\n    },\n    {\n      id: uuid(),\n      name: \"SPAIN\",\n      price: 400,\n      images: [],\n      continent: \"Europe\",\n    },\n  ],\n  reducers: {\n    addProduct: (state, action) => {\n      state.push(action.payload)\n    },\n  },\n})\n\nexport const addThisProductToCart = createAction(\"addThisProductToCart\")\n\nexport const { reducer } = products\nexport const { addProduct } = products.actions\n","import { createSlice, createSelector } from \"@reduxjs/toolkit\"\nimport { v4 as uuid } from \"uuid\"\nimport { addThisProductToCart } from \"reduxStore/product\"\n\n/*\n  type cart = {\n    cartItems: Array<Product & {quantity: number}>\n  }\n*/\n\nconst cart = createSlice({\n  name: \"cart\",\n  initialState: { cartItems: [] },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(addThisProductToCart, (state, action) => {\n      const cartItem = state.cartItems.find(\n        (cartItem) => cartItem.id === action.payload.id\n      )\n      if (cartItem) {\n        cartItem.quantity++\n      } else {\n        state.cartItems.push({ ...action.payload, quantity: 1 })\n      }\n    })\n  },\n})\n\nexport const cartItemsSelector = (state) => state.cart.cartItems\nexport const totalSelector = createSelector(cartItemsSelector, (cartItems) =>\n  cartItems.reduce((total, item) => total + item.price * item.quantity, 0)\n)\n\nexport const { reducer } = cart\n","import { configureStore } from \"@reduxjs/toolkit\"\n\nimport { reducer as globalReducer } from \"./globalState\"\nimport { reducer as productReducer } from \"./product\"\nimport { reducer as userReducer } from \"./user\"\nimport { reducer as cartReducer } from \"./cart\"\n\nconst reducer = {\n  global: globalReducer,\n  products: productReducer,\n  user: userReducer,\n  cart: cartReducer,\n}\n\nexport const store = configureStore({ reducer })\n","import React from \"react\"\nimport { Redirect } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n})\n\nconst WithAuth = (Component) => {\n  return connect(mapStateToProps)(({ currentUser, ...restProps }) =>\n    currentUser ? <Component {...restProps} /> : <Redirect to=\"/login\" />\n  )\n}\n\nexport default WithAuth\n","import React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from \"@reduxjs/toolkit\"\nimport { logOut } from \"reduxStore/user\"\nimport { toggleUserProfile } from \"reduxStore/globalState\"\nimport \"./UserProfileDropdown.scss\"\n\nconst UserProfileDropdown = ({ logOut, toggleUserProfile }) => {\n  useEffect(() => {\n    const listener = (e) => {\n      if (e.target.matches(\".UserProfileDropdown *\")) return\n      toggleUserProfile()\n    }\n    document.body.addEventListener(\"click\", listener, false)\n    return () => {\n      document.body.removeEventListener(\"click\", listener, false)\n    }\n  }, [toggleUserProfile])\n  return (\n    <div className=\"UserProfileDropdown\">\n      <span onClick={() => logOut()}>Logout</span>\n      <span>My Profile</span>\n      <span>Change Password</span>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  logOut: bindActionCreators(logOut, dispatch),\n  toggleUserProfile: bindActionCreators(toggleUserProfile, dispatch),\n})\n\nexport default connect(null, mapDispatchToProps)(UserProfileDropdown)\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from \"@reduxjs/toolkit\"\nimport { toggleUserProfile } from \"reduxStore/globalState\"\nimport UserProfileDropdown from \"components/UserProfileDropdown/UserProfileDropdown\"\nimport \"./Header.scss\"\n\nconst Header = ({ currentUser, isUserProfileOpened, toggleUserProfile }) => {\n  return (\n    <div className=\"Header\">\n      <div className=\"left\">\n        <Link to=\"/\" className=\"home\">\n          Home\n        </Link>\n      </div>\n      <div className=\"right\">\n        <Link to=\"/products\" className=\"products\">\n          Products\n        </Link>\n        <Link to=\"/cart\" className=\"cart\">\n          Cart\n        </Link>\n        {currentUser ? (\n          <div className=\"loggedin-user\">\n            <span onClick={() => toggleUserProfile()}>\n              Welcome, {currentUser}\n            </span>\n            {isUserProfileOpened && <UserProfileDropdown />}\n          </div>\n        ) : (\n          <Link to=\"/login\" className=\"login\">\n            Login\n          </Link>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n  isUserProfileOpened: state.global.isUserProfileOpened,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleUserProfile: bindActionCreators(toggleUserProfile, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import React from \"react\"\n\nconst HomePage = () => {\n  return <div className=\"HomePage\">HomePage</div>\n}\n\nexport default HomePage\n","import React from \"react\"\nimport { cartItemsSelector, totalSelector } from \"reduxStore/cart\"\nimport { connect } from \"react-redux\"\nimport \"./CartWindow.scss\"\n\nconst CartWindow = ({ cartItems, total }) => {\n  return (\n    <div className=\"CartWindow\">\n      <div className=\"table\">\n        <div className=\"table-head\">\n          <span className=\"field\">Name</span>\n          <span className=\"field\">Quantity</span>\n          <span className=\"field\">Price</span>\n        </div>\n        {cartItems.map((cartItem) => (\n          <div key={Math.random()} className=\"table-row\">\n            <span>{cartItem.name}</span>\n            <span>{cartItem.quantity}</span>\n            <span>${cartItem.price}</span>\n          </div>\n        ))}\n      </div>\n      <span className=\"total\">Total: ${total}</span>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  cartItems: cartItemsSelector(state),\n  total: totalSelector(state),\n})\n\nexport default connect(mapStateToProps)(CartWindow)\n","import React from \"react\"\nimport CartWindow from \"components/CartWindow/CartWindow\"\n\nconst CartPage = () => {\n  return (\n    <div className=\"CartPage\">\n      <h3 style={{ textAlign: \"center\" }}>CartPage</h3>\n      <CartWindow />\n    </div>\n  )\n}\n\nexport default CartPage\n","import { useState } from \"react\"\n\nexport default (...fields) => {\n  const initialState = fields.reduce((prev, curr) => {\n    return { ...prev, [curr]: \"\" }\n  }, {})\n\n  const [state, setState] = useState(initialState)\n\n  const changeHandler = (e) => {\n    const { name, value } = e.target\n    setState((prev) => ({ ...prev, [name]: value }))\n  }\n\n  const clearState = () => setState(initialState)\n\n  return { state, changeHandler, clearState }\n}\n","import React, { useRef, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from \"@reduxjs/toolkit\"\nimport { Redirect } from \"react-router-dom\"\n\nimport { setCurrentUser } from \"reduxStore/user\"\nimport useInput from \"hooks/useInput\"\nimport \"./LoginWindow.scss\"\n\nconst LoginWindow = ({ currentUser, setCurrentUser }) => {\n  const firstInputRef = useRef(null)\n  const { state, changeHandler, clearState } = useInput(\"account\", \"password\")\n  const { account, password } = state\n\n  const loginHandler = (e) => {\n    e.preventDefault()\n    setCurrentUser(state.account)\n    clearState()\n  }\n\n  useEffect(() => {\n    firstInputRef.current.focus()\n  }, [])\n\n  return currentUser ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <div className=\"LoginWindow\">\n      <form className=\"form\" onSubmit={loginHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"account\">Account</label>\n          <input\n            ref={firstInputRef}\n            type=\"text\"\n            id=\"account\"\n            name=\"account\"\n            value={account}\n            onChange={changeHandler}\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={changeHandler}\n          />\n        </div>\n        <button>Login</button>\n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: bindActionCreators(setCurrentUser, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginWindow)\n","import React from \"react\"\nimport LoginWindow from \"components/LoginWindow/LoginWindow\"\n\nconst LoginPage = () => {\n  return (\n    <div className=\"LoginPage\">\n      <h3 style={{ textAlign: \"center\" }}>LoginPage</h3>\n      <LoginWindow />\n    </div>\n  )\n}\n\nexport default LoginPage\n","import React, { useRef } from \"react\"\nimport { connect } from \"react-redux\"\nimport { addProduct } from \"reduxStore/product\"\nimport { bindActionCreators } from \"@reduxjs/toolkit\"\nimport { v4 as uuid } from \"uuid\"\n\nimport useInput from \"hooks/useInput\"\nimport \"./ManageProduct.scss\"\n\nconst ManageProduct = ({ products, addProduct }) => {\n  const productNameInputRef = useRef(null)\n  const { state, changeHandler, clearState } = useInput(\n    \"name\",\n    \"price\",\n    \"continent\"\n  )\n  const { name, price, continent } = state\n  const formSubmitHandler = (e) => {\n    e.preventDefault()\n    addProduct({ id: uuid(), name, price, continent, images: [] })\n    clearState()\n    productNameInputRef.current.focus()\n  }\n  return (\n    <div className=\"ManageProduct\">\n      <form className=\"form\" onSubmit={formSubmitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"name\">Product Name</label>\n          <input\n            ref={productNameInputRef}\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={name}\n            onChange={changeHandler}\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"price\">Price</label>\n          <input\n            type=\"text\"\n            id=\"price\"\n            name=\"price\"\n            value={price}\n            onChange={changeHandler}\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"continent\">Continent</label>\n          <input\n            type=\"text\"\n            id=\"continent\"\n            name=\"continent\"\n            value={continent}\n            onChange={changeHandler}\n          />\n        </div>\n        <button>Submit</button>\n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  products: state.products,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  addProduct: bindActionCreators(addProduct, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageProduct)\n","import React from \"react\"\nimport STATIC_PICTURE from \"static/static_pic.jpg\"\nimport \"./Card.scss\"\n\nconst Card = ({ name, price, ...otherProps }) => {\n  return (\n    <div className=\"Card\" {...otherProps}>\n      <img className=\"picture\" src={STATIC_PICTURE} alt=\"scenary\" />\n      <div className=\"more\">\n        <span className=\"name\">{name}</span>\n        <span className=\"price\">{`$${price}`}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from \"@reduxjs/toolkit\"\nimport Card from \"components/Card/Card\"\nimport { addThisProductToCart } from \"reduxStore/product\"\nimport \"./DisplayProducts.scss\"\n\nconst DisplayProducts = ({ products, addThisProductToCart }) => {\n  return (\n    <div className=\"DisplayProducts\" style={{ marginTop: \"2rem\" }}>\n      {products.map((product) => (\n        <Card\n          key={Math.random().toString().slice(2)}\n          name={product.name}\n          price={product.price}\n          onClick={() => addThisProductToCart(product)}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  products: state.products,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  addThisProductToCart: bindActionCreators(addThisProductToCart, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayProducts)\n","import React from \"react\"\nimport ManageProduct from \"components/ManageProduct/ManageProduct\"\nimport DisplayProducts from \"components/DisplayProducts/DisplayProducts\"\n\nconst ProductPage = () => {\n  return (\n    <div className=\"ProductPage\">\n      <h3 style={{ textAlign: \"center\" }}>ProductPage</h3>\n      <ManageProduct />\n      <DisplayProducts />\n    </div>\n  )\n}\n\nexport default ProductPage\n","import React from \"react\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport { Provider } from \"react-redux\"\nimport ReactDOM from \"react-dom\"\nimport App from \"App\"\n\nimport { store } from \"reduxStore\"\n\nimport WithAuth from \"components/WithAuth/WithAuth\"\nimport Header from \"components/Header/Header\"\nimport HomePage from \"pages/HomePage/HomePage\"\nimport CartPage from \"pages/CartPage/CartPage\"\nimport LoginPage from \"pages/LoginPage/LoginPage\"\nimport ProductPage from \"pages/ProductPage/ProductPage\"\n\nimport \"index.scss\"\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Header />\n      <App>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/cart\" component={WithAuth(CartPage)} />\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/products\" component={ProductPage} />\n        </Switch>\n      </App>\n    </Router>\n  </Provider>\n)\n\nReactDOM.render(<Root />, document.getElementById(\"root\"))\n"],"sourceRoot":""}